#!/bin/bash
# update-vpn-routing.sh: Add/remove wlan0 from VPN routing

set -e

ACTION="$1"
WLAN0_SUBNET="192.168.51.0/24"
VPN_TABLE="vpnclients"

case "$ACTION" in
    "add-wlan0")
        echo "Adding wlan0 subnet to VPN routing..."
        
        # Configure static IP for wlan0 in AP mode
        ip addr add 192.168.51.1/24 dev wlan0 2>/dev/null || true
        ip link set wlan0 up
        
        # Add policy rule for wlan0 clients
        ip rule del from $WLAN0_SUBNET table $VPN_TABLE 2>/dev/null || true
        ip rule add from $WLAN0_SUBNET table $VPN_TABLE
        
        # Add NAT masquerade for wlan0 to tun0
        iptables -t nat -D POSTROUTING -o tun0 -s $WLAN0_SUBNET -j MASQUERADE 2>/dev/null || true
        iptables -t nat -A POSTROUTING -o tun0 -s $WLAN0_SUBNET -j MASQUERADE
        
        # Add kill-switch rule for wlan0 (block non-VPN traffic)
        iptables -D FORWARD -i wlan0 ! -o tun0 -j REJECT 2>/dev/null || true
        iptables -A FORWARD -i wlan0 ! -o tun0 -j REJECT --reject-with icmp-port-unreachable
        
        # Allow forwarding from wlan0 to tun0
        iptables -D FORWARD -i wlan0 -o tun0 -j ACCEPT 2>/dev/null || true
        iptables -I FORWARD -i wlan0 -o tun0 -j ACCEPT
        
        # Allow return traffic from tun0 to wlan0
        iptables -D FORWARD -i tun0 -o wlan0 -m state --state RELATED,ESTABLISHED -j ACCEPT 2>/dev/null || true
        iptables -I FORWARD -i tun0 -o wlan0 -m state --state RELATED,ESTABLISHED -j ACCEPT
        
        # Save iptables rules (persist across reboots)
        iptables-save > /etc/iptables/rules.v4
        
        # Create persistent network configuration for wlan0 AP mode
        cat > /etc/systemd/network/15-wlan0-ap.network << EOF
[Match]
Name=wlan0

[Network]
Address=192.168.51.1/24
DNS=8.8.8.8 1.1.1.1
IPForward=yes
EOF
        
        # Create flag file to indicate AP mode is active
        echo "$(date): AP mode enabled" > /var/lib/wifi-mode-toggle/current-mode
        echo "ap" >> /var/lib/wifi-mode-toggle/current-mode
        
        echo "wlan0 subnet added to VPN routing"
        ;;
        
    "remove-wlan0")
        echo "Removing wlan0 subnet from VPN routing..."
        
        # Remove policy rule for wlan0 clients
        ip rule del from $WLAN0_SUBNET table $VPN_TABLE 2>/dev/null || true
        
        # Remove NAT masquerade for wlan0
        iptables -t nat -D POSTROUTING -o tun0 -s $WLAN0_SUBNET -j MASQUERADE 2>/dev/null || true
        
        # Remove kill-switch rule for wlan0
        iptables -D FORWARD -i wlan0 ! -o tun0 -j REJECT 2>/dev/null || true
        
        # Remove forwarding rules for wlan0
        iptables -D FORWARD -i wlan0 -o tun0 -j ACCEPT 2>/dev/null || true
        iptables -D FORWARD -i tun0 -o wlan0 -m state --state RELATED,ESTABLISHED -j ACCEPT 2>/dev/null || true
        
        # Remove static IP from wlan0
        ip addr del 192.168.51.1/24 dev wlan0 2>/dev/null || true
        
        # Remove persistent network configuration for wlan0 AP mode
        rm -f /etc/systemd/network/15-wlan0-ap.network
        
        # Save iptables rules (persist across reboots)
        iptables-save > /etc/iptables/rules.v4
        
        # Create flag file to indicate client mode is active
        echo "$(date): Client mode enabled" > /var/lib/wifi-mode-toggle/current-mode
        echo "client" >> /var/lib/wifi-mode-toggle/current-mode
        
        echo "wlan0 subnet removed from VPN routing"
        ;;
        
    *)
        echo "Usage: $0 {add-wlan0|remove-wlan0}"
        exit 1
        ;;
esac
